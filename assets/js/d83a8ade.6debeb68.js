"use strict";(self.webpackChunkcanine_docs=self.webpackChunkcanine_docs||[]).push([[9014],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),s=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=s(e.components);return a.createElement(c.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(t),g=r,f=d["".concat(c,".").concat(g)]||d[g]||u[g]||o;return t?a.createElement(f,l(l({ref:n},p),{},{components:t})):a.createElement(f,l({ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=g;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},6121:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=t(7462),r=(t(7294),t(3905));const o={sidebar_position:2},l="Jackal.js",i={unversionedId:"developers/jackaljs/intro",id:"developers/jackaljs/intro",title:"Jackal.js",description:"Quickstart",source:"@site/docs/developers/jackaljs/intro.md",sourceDirName:"developers/jackaljs",slug:"/developers/jackaljs/intro",permalink:"/docs/developers/jackaljs/intro",draft:!1,editUrl:"https://github.com/JackalLabs/canine-docs/blob/master/docs/developers/jackaljs/intro.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Setting Up JProvd",permalink:"/docs/nodes/providers/setting_up"},next:{title:"Getting Started",permalink:"/docs/developers/intro"}},c={},s=[{value:"Quickstart",id:"quickstart",level:2},{value:"Pre-requesites",id:"pre-requesites",level:3},{value:"Setting Up",id:"setting-up",level:3},{value:"Updating Vite Config",id:"updating-vite-config",level:4},{value:"Connecting Your Wallet",id:"connecting-your-wallet",level:3},{value:"Buying Storage Space",id:"buying-storage-space",level:3},{value:"Creating a Folder",id:"creating-a-folder",level:3},{value:"Uploading a File",id:"uploading-a-file",level:3},{value:"Downloading a File",id:"downloading-a-file",level:3}],p={toc:s},d="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"jackaljs"},"Jackal.js"),(0,r.kt)("h2",{id:"quickstart"},"Quickstart"),(0,r.kt)("p",null,"To get started using Jackal in the browser, you'll need a few things!"),(0,r.kt)("h3",{id:"pre-requesites"},"Pre-requesites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download"},"Node.js")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/jackal.js"},"Jackal.js")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://vitejs.dev/"},"Vite")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.keplr.app/"},"Keplr"))),(0,r.kt)("h3",{id:"setting-up"},"Setting Up"),(0,r.kt)("p",null,"To get started, make sure you start your project using Vite. If you have an existing React app for example, re-init the project using Vite."),(0,r.kt)("h4",{id:"updating-vite-config"},"Updating Vite Config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// In vite.config.js:\nimport nodePolyfills from 'vite-plugin-node-stdlib-browser'\n\nexport default defineConfig({\n  plugins: [\n    nodePolyfills()\n  ],\n})\n")),(0,r.kt)("h3",{id:"connecting-your-wallet"},"Connecting Your Wallet"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const chainConfig = { // mainnet chain config\n    chainId: 'jackal-1',\n    chainName: 'Jackal',\n    rpc: 'https://rpc.jackalprotocol.com',\n    rest: 'https://api.jackalprotocol.com',\n    bip44: {\n      coinType: 118\n    },\n    coinType: 118,\n    stakeCurrency: {\n      coinDenom: 'JKL',\n      coinMinimalDenom: 'ujkl',\n      coinDecimals: 6\n    },\n    bech32Config: {\n      bech32PrefixAccAddr: 'jkl',\n      bech32PrefixAccPub: 'jklpub',\n      bech32PrefixValAddr: 'jklvaloper',\n      bech32PrefixValPub: 'jklvaloperpub',\n      bech32PrefixConsAddr: 'jklvalcons',\n      bech32PrefixConsPub: 'jklvalconspub'\n    },\n    currencies: [\n      {\n        coinDenom: 'JKL',\n        coinMinimalDenom: 'ujkl',\n        coinDecimals: 6\n      }\n    ],\n    feeCurrencies: [\n      {\n        coinDenom: 'JKL',\n        coinMinimalDenom: 'ujkl',\n        coinDecimals: 6,\n        gasPriceStep: {\n          low: 0.002,\n          average: 0.002,\n          high: 0.02\n        }\n      }\n    ],\n    features: []\n}\n\nconst walletConfig = {\n  selectedWallet: 'keplr',\n  signerChain: 'jackal-1',\n  enabledChains: ['jackal-1'],\n  queryAddr: 'https://grpc.jackalprotocol.com',\n  txAddr: 'https://rpc.jackalprotocol.com',\n  chainConfig: chainConfig\n}\n\n// Hooking up the wallet to your app\nconst wallet = await WalletHandler.trackWallet(walletConfig)\n\n")),(0,r.kt)("h3",{id:"buying-storage-space"},"Buying Storage Space"),(0,r.kt)("p",null,"Every account that wishes to use the Jackal Protocol to store data needs to have a paid account. This means giving the protocol $8/month/tb. We can do this with Jackal.js!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const storage = await StorageHandler.trackStorage(wallet)\n\n// (Wallet address, duration in hours (min 720), \n// space in bytes (min 1000000000)\nawait storage.buyStorage(WALLET_ADDRESS, 720, 1000000000000)\n")),(0,r.kt)("h3",{id:"creating-a-folder"},"Creating a Folder"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const fileIo = await FileIo.trackIo(wallet)\n\nconst listOfFolders = ["folder_name", ...] \n// you can create as many folders as you would like this way\n\n// The first time a user connects, they must init the system\nconst storage = await StorageHandler.trackStorage(wallet)\nconst msg = storage.makeStorageInitMsg()\nawait fileIo.generateInitialDirs(msg, listOfFolders)\n\n// after the first time, this code can be used instead. this will only create new folders if they don\'t already exist\nconst newFolderCount = await fileIo.verifyFoldersExist(listOfFolders)\n')),(0,r.kt)("h3",{id:"uploading-a-file"},"Uploading a File"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const fileIo = await FileIo.trackIo(wallet)\n\nconst parentFolderPath = PARENT_FOLDER_NAME // replace this with your own path\nconst fileName = FILE_NAME // replace this with your own file name\n\nconst handler = await FileUploadHandler.trackFile(FILE_OBJECT, parentFolderPath)\n\nconst parent = await fileIo.downloadFolder(parentFolderPath)\n\nconst uploadList = {\n    fileName: {\n        data: null,\n        exists: false, \n        handler: handler,\n        key: fileName,\n        uploadable: await handler.getForUpload()\n    }\n}\n\nawait fileIo.staggeredUploadFiles(uploadList, parent, {counter: 0, complete: 0})\n")),(0,r.kt)("h3",{id:"downloading-a-file"},"Downloading a File"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const fileIo = await FileIo.trackIo(wallet)\n\nconst file = await fileIo.downloadFile(\n    {\n        rawPath: FILE_PATH\n        owner: OWNER_ADDRESS\n        isFolder: false\n    }, \n    {\n        track: 0\n    }\n)\n\nconst fileData = file.receiveBacon()\n// do what you want with the File object returned by receiveBacon\n")))}u.isMDXComponent=!0}}]);